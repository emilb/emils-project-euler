package net.projecteuler.problem002;

import net.projecteuler.solution.AbstractSolution;

public class Solution002 extends AbstractSolution {

	private int a, b = 0;
	
	@Override
	public String getProblemDescription() {
		StringBuilder sb = new StringBuilder();
		sb.append(
				"Each new term in the Fibonacci sequence is generated by adding the previous \n")
				.append("two terms. By starting with 1 and 2, the first 10 terms will be:\n\n")
				.append("1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n\n")
				.append("By considering the terms in the Fibonacci sequence whose values do not exceed\n")
				.append("four million, find the sum of the even-valued terms.");

		return sb.toString();
	}

	@Override
	public String getProblemDescriptionUrl() {
		return "http://projecteuler.net/problem=2";
	}

	@Override
	public void solve() {
		
		int sum = 0;
		int currentFibonacci = 0;
		while (currentFibonacci < 4E6) {
			currentFibonacci = getNextFibonacci();
			if (currentFibonacci % 2 == 0)
				sum+= currentFibonacci;
		}
		
		System.out.println("Sum: " + sum);

	}

	protected int getNextFibonacci() {
		if (a == 0 && b == 0) {
			b = 1;
			return 1;
		} else if (a == 0 && b == 1) {
			a = 1;
			b = 2;
			return 2;
		}
		
		int sum = a + b;
		a = b;
		b = sum;
		return sum;
	}
	
	public static void main(String ... args) {
		Solution002 solution = new Solution002();
		solution.execute();
	}
}
